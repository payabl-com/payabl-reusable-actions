name: Node.js CI Pipeline

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '22.x'
      test-env:
        description: 'Test environment (local, dev, prod)'
        required: false
        type: string
        default: 'dev'
      skip-build:
        description: 'Skip build step'
        required: false
        type: boolean
        default: false
      skip-tests:
        description: 'Skip test step'
        required: false
        type: boolean
        default: false
      working-directory:
        description: 'Working directory'
        required: false
        type: string
        default: '.'
    secrets:
      NPM_TOKEN:
        description: 'NPM registry token'
        required: false

jobs:
  ci:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'
          cache-dependency-path: ${{ inputs.working-directory }}/package-lock.json

      - name: Setup NPM registry
        if: secrets.NPM_TOKEN != ''
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type:check

      - name: Build
        if: ${{ !inputs.skip-build }}
        run: npm run build

      - name: Run tests
        if: ${{ !inputs.skip-tests }}
        env:
          TEST_ENV: ${{ inputs.test-env }}
        run: |
          if [ "${{ inputs.test-env }}" == "local" ]; then
            npm run test:local
          elif [ "${{ inputs.test-env }}" == "prod" ]; then
            npm run test:prod
          else
            npm run test:dev
          fi